services:
  # Сервис для базы данных PostgreSQL
  db:
    image: postgres:14-alpine  # Используем официальный, легковесный образ Postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Сохраняем данные БД между перезапусками
    environment:
      # Эти переменные используются Postgres для создания БД и пользователя при первом запуске
      - POSTGRES_USER=vertical_user
      - POSTGRES_PASSWORD=vertical_password
      - POSTGRES_DB=vertical_db
    ports:
      - "5433:5432" # Пробрасываем порт, чтобы можно было подключиться к БД с компьютера

  # Сервис для нашего Django-приложения
  web:
    build: .  # Инструкция собрать образ из текущей директории (используя Dockerfile)
    command: python manage.py runserver 0.0.0.0:8000 # Команда для запуска сервера
    volumes:
      - .:/code # "Зеркалим" код из нашей папки в контейнер, чтобы изменения сразу применялись
    ports:
      - "8000:8000" # Пробрасываем порт веб-сервера
    # теперь environment можно удалить, но оставил для наглядности (у env_file больший приоритет и выполнится только оно)
    # но может переопределить некоторые переменные, но в нашем случае они совпадают, поэтому в нормальной работе лучше удалить
    env_file:
      - .env 

    environment:
      # Переменные для подключения к БД. хост - это 'db' (имя сервиса)
      - POSTGRES_NAME=vertical_db
      - POSTGRES_USER=vertical_user
      - POSTGRES_PASSWORD=vertical_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db # Указываем, что наш веб-сервис зависит от сервиса БД
  redis:
    image: redis:7-alpine # Используем официальный, легковесный образ Redis

  # Новый сервис для Celery worker
  celery:
    build: .             # Используем тот же Docker-образ, что и для web
    command: celery -A vertical_project worker --loglevel=info # Команда для запуска рабочего
    volumes:
      - .:/code          # "Зеркалим" код, как и для web
    env_file:
      - .env             # Передаем те же переменные окружения
    depends_on:
      - web              # Celery зависит от кода Django
      - redis            # ... и от Redis

volumes:
  postgres_data: # Объявляем "том" для хранения данных БД
